server:
  port: 8089

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}

spring:
  application:
    name: payment-service
  config:
    import: "optional:configserver:${CONFIG_SERVER_URL:http://localhost:8888}"
  data:
    mongodb:
      port: 27017
      host: localhost
      database: payment_db
      authentication-database: admin
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: schedule-group
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: vn.edu.iuh.fit.paymentservice.dtos
vnp:
  secretKey: ${VNP_SECRET_KEY}
  version: ${VNP_VERSION:2.1.0}
  vnp_TmnCode: ${VNP_TMN}
  vnp_Url: ${VNP_URL:https://sandbox.vnpayment.vn/paymentv2/vpcpay.html}
  vnp_ReturnUrl: ${VNP_RETURN_URL:http://localhost:8099/vnpay_jsp/vnpay_return.jsp}
  vnp_ApiUrl: ${VNP_API_URL:https://sandbox.vnpayment.vn/merchant_webapi/api/transaction}
  vnp_Command: ${VNP_COMMAND:pay}
