services:
  postgres:
    container_name: db-postgres-container
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./databases/postgres/init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./databases/postgres/data:/var/lib/postgresql/data
    networks:
      - postgres-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
  adminer:
    container_name: adminer-container
    image: adminer:latest
    restart: always
    ports:
      - "8080:8080"
    networks:
      - postgres-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          memory: 128M
  mongodb:
    container_name: db-mongodb-container
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123456
    volumes:
      - ./databases/mongodb/data:/data/db
      - ./databases/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - mongodb-net
  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=123456
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_AUTH_USERNAME=root
      - ME_CONFIG_MONGODB_AUTH_PASSWORD=123456
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    networks:
      - mongodb-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          memory: 128M
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          memory: 128M
  redis:
    container_name: redis-container
    image: redis:latest
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=123456
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    networks:
      - redis-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          memory: 128M
  zookeeper:
    container_name: zookeeper-container
    image: confluentinc/cp-zookeeper:latest
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - kafka-net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          memory: 128M
  kafka:
    container_name: kafka-container
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INSIDE://:29092,OUTSIDE://:9092
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:29092,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - kafka-net
  service-registry:
    image: that909kk/be-service-registry:lastest
    ports:
      - "8761:8761"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          memory: 128M
  config-server:
    image: that909kk/be-config-server:lastest
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
    volumes:
      - ./Backend/config-server:/config
    networks:
      - backend
    deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 256M
          reservations:
            memory: 128M
  apigateway:
    image: that909kk/be-api-gateway:lastest
    container_name: api-gateway-container
    ports:
      - "8060:8060"
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_DATA_REDIS_DATABASE=0
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_TIMEOUT=60000
      - SPRING_DATA_REDIS_PASSWORD=123456
    volumes:
      - ./Backend/api-gateway:/config
    networks:
      - backend
      - redis-net
    depends_on:
        - config-server
        - service-registry
        - redis
        - zipkin
    deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 512M
          reservations:
            memory: 256M
  auth-service:
    image: that909kk/be-auth-services:lastest
    ports:
      - "9004:9004"
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_APPLICATION_NAME=auth-service
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      - JWT_SECRET=9fa543ab908887fa3011d3692a28b865eec519fd235881c85efcc2659b61aa00
      - JWT_EXPIRATION=86400
      - SPRING_DATA_REDIS_DATABASE=0
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_TIMEOUT=60000
      - SPRING_DATA_REDIS_PASSWORD=123456
      - SPRING_ZIPKIN_BASE_URL=http://zipkin:9411
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://zipkin:9411/api/v2/spans
      - SPRING_SLEUTH_SAMPLER_PROBABILITY=1.0
    volumes:
      - ./Backend/auth-services:/config
    networks:
      - backend
      - redis-net
      - postgres-net
    depends_on:
        - config-server
        - service-registry
        - redis
        - apigateway
        - postgres
    deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 512M
          reservations:
            memory: 256M
  faculty-service:
    image: that909kk/be-faculty-service:lastest
    restart: always
    ports:
      - "8082:8082"
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_APPLICATION_NAME=faculty-service
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/faculty_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
    depends_on:
      - service-registry
      - config-server
      - apigateway
      - postgres
    volumes:
      - ./Backend/faculty-service:/config
    networks:
      - backend
      - postgres-net
    deploy:
        resources:
          limits:
            cpus: '0.50'
            memory: 512M
          reservations:
            memory: 256M

  course-service:
    image: 21086351huynhkimthanh/be-course-service:lastest
    restart: always
    ports:
      - "8086:8086"
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_APPLICATION_NAME=course-service
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_DATABASE=course_db
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_URI=mongodb://root:123456@mongodb:27017/admin
    volumes:
      - ./Backend/course-service:/config
    depends_on:
      - service-registry
      - config-server
      - apigateway
      - mongodb
    networks:
      - backend
      - mongodb-net
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          memory: 256M

  schedule-service:
    image: 21086351huynhkimthanh/be-schedule-service:lastest
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_DATABASE=schedule_db
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_URI=mongodb://root:123456@mongodb:27017/admin
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=schedule-group
      - SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=earliest
      - SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER=org.springframework.kafka.support.serializer.JsonDeserializer
      - SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES=vn.edu.iuh.fit.scheduleservice.dtos
      - SPRING_KAFKA_PRODUCER_KEY_SERIALIZER=org.apache.kafka.common.serialization.StringSerializer
      - SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER=org.springframework.kafka.support.serializer.JsonSerializer
    ports:
      - "8085:8085"
    depends_on:
      - service-registry
      - config-server
      - mongodb
      - apigateway
      - redis
      - kafka
    networks:
      - backend
      - mongodb-net
      - redis-net
      - kafka-net
    env_file:
      - .env
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          memory: 256M

  grade-management-service:
    image: 21086351huynhkimthanh/be-grade-management-service:lastest
    restart: always
    ports:
      - "8087:8087"
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_DATABASE=grade_db
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_URI=mongodb://root:123456@mongodb:27017/admin
    volumes:
      - ./Backend/grade-management-service:/config
    depends_on:
      - service-registry
      - config-server
      - apigateway
      - mongodb
    env_file:
      - .env
    networks:
      - backend
      - mongodb-net
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          memory: 256M

  payment-service:
    image: 21086351huynhkimthanh/be-payment-service:lastest
    restart: always
    ports:
      - "8089:8089"
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_DATABASE=payment_db
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_URI=mongodb://root:123456@mongodb:27017/admin
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=notification-group
      - SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=earliest
      - SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER=org.springframework.kafka.support.serializer.JsonDeserializer
      - SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES=vn.edu.iuh.fit.paymentservice.dtos
      - SPRING_KAFKA_PRODUCER_KEY_SERIALIZER=org.apache.kafka.common.serialization.StringSerializer
      - SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER=org.springframework.kafka.support.serializer.JsonSerializer
      - SPRING_PROFILES_ACTIVE=docker
      - VNP_VERSION=2.1.0
      - VNP_URL=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
      - VNP_RETURN_URL=http://localhost:5173/thanh-toan-truc-tuyen?success=true
      - VNP_API_URL=https://sandbox.vnpayment.vn/merchant_webapi/api/transaction
      - VNP_COMMAND=pay
    depends_on:
      - service-registry
      - config-server
      - mongodb
      - apigateway
      - kafka
      - schedule-service
    env_file:
      - .env
    networks:
      - backend
      - mongodb-net
      - kafka-net
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          memory: 256M


  notification-service:
    image: 21086351huynhkimthanh/be-notification-service:lastest
    restart: always
    ports:
      - "8090:8090"
    environment:
      - CONFIG_SERVER_URL=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=notification-group
      - SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET=earliest
      - SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.StringDeserializer
      - SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER=org.springframework.kafka.support.serializer.JsonDeserializer
      - SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES=vn.edu.iuh.fit.notificationservice.dtos
      - SPRING_KAFKA_PRODUCER_KEY_SERIALIZER=org.apache.kafka.common.serialization.StringSerializer
      - SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER=org.springframework.kafka.support.serializer.JsonSerializer
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./Backend/notification-service:/config
    env_file:
      - .env
    depends_on:
      - service-registry
      - config-server
      - apigateway
      - mongodb
      - kafka
    networks:
      - backend
      - mongodb-net
      - kafka-net
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          memory: 256M

volumes:
  postgres-data:
  mongodb-data:
networks:
  backend:
      name: university-enrollment-backend
      driver: bridge
  postgres-net:
      driver: bridge
  mongodb-net:
      driver: bridge
  redis-net:
      driver: bridge
  kafka-net:
      driver: bridge
  
